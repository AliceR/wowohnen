{"version":3,"sources":["Map.js","App.styles.js","App.js","registerServiceWorker.js","index.js"],"names":["mapboxgl","accessToken","Map","props","state","map","populationMaxFilter","this","populationMax","populationMin","sunshineHoursMin","sunshineHoursMax","container","mapContainer","style","center","zoom","on","addSource","type","url","radius","addLayer","id","source","paint","setFilter","getFilter","e","coordinates","features","geometry","slice","name","properties","population","sunshine_hours","Popup","setLngLat","setHTML","toLocaleString","addTo","setState","prevProps","width","height","ref","el","React","Component","styles","theme","root","flexGrow","zIndex","overflow","position","display","appBar","drawer","backgroundColor","drawerPaper","content","palette","background","default","minWidth","range","margin","top","label","justifyContent","App","onSliderChange","value","classes","populationMinLabel","populationMaxLabel","className","AppBar","Toolbar","Typography","variant","color","noWrap","Drawer","paper","role","aria-label","defaultValue","min","max","step","onChange","trackStyle","handleStyle","borderColor","withStyles","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.15bfdef1.chunk.js","sourcesContent":["import mapboxgl from 'mapbox-gl'\nimport React from 'react'\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoidXN0cm9ldHoiLCJhIjoiQmp3RjlaZyJ9.7JCU4lzvAzfijEV129QFiQ'\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { map: null }\n  }\n\n  getFilter() {\n    const maxThreshold = 500000\n    const populationMaxFilter =\n      this.props.populationMax > maxThreshold\n        ? ['in']\n        : ['<=', 'population', this.props.populationMax]\n\n    return [\n      'all',\n      ['>=', 'population', this.props.populationMin],\n      populationMaxFilter,\n      ['>=', 'sunshine_hours', this.props.sunshineHoursMin],\n      ['<=', 'sunshine_hours', this.props.sunshineHoursMax]\n    ]\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/outdoors-v9',\n      center: [10.1299, 51.3401],\n      zoom: 5.1\n    })\n\n    map.on('load', () => {\n      map.addSource('cities_processed-59mru6', {\n        type: 'vector',\n        url: 'mapbox://ustroetz.9fzl7st5'\n      })\n\n      const radius = [\n        'interpolate',\n        ['cubic-bezier', 0, 0.2, 0.4, 0.9],\n        ['get', 'population'],\n        0,\n        0,\n        5000000,\n        50\n      ]\n\n      map.addLayer({\n        id: 'cities_base',\n        type: 'circle',\n        source: 'cities_processed-59mru6',\n        'source-layer': 'cities_processed-59mru6',\n        paint: {\n          'circle-radius': radius,\n          'circle-opacity': 0.2,\n          'circle-color': 'grey'\n        }\n      })\n\n      map.addLayer({\n        id: 'cities_highlighted',\n        type: 'circle',\n        source: 'cities_processed-59mru6',\n        'source-layer': 'cities_processed-59mru6',\n        paint: {\n          'circle-radius': radius,\n          'circle-opacity': 0,\n          'circle-stroke-width': 3,\n          'circle-stroke-color': 'teal'\n        }\n      })\n\n      map.setFilter('cities_highlighted', this.getFilter())\n    })\n\n    map.on('click', 'cities_highlighted', function (e) {\n      var coordinates = e.features[0].geometry.coordinates.slice()\n      var name = e.features[0].properties.name\n      var population = e.features[0].properties.population\n      var sunshine_hours = e.features[0].properties.sunshine_hours\n\n      new mapboxgl.Popup()\n        .setLngLat(coordinates)\n        .setHTML(\n          '<h3>' +\n            name +\n            '</h3>' +\n            'üßë ' +\n            population.toLocaleString() +\n            '<br/> ‚òÄÔ∏è ' +\n            sunshine_hours.toLocaleString()\n        )\n        .addTo(map)\n    })\n\n    this.setState({ map: map })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.populationMin !== prevProps.populationMin ||\n      this.props.populationMax !== prevProps.populationMax ||\n      this.props.sunshineHoursMin !== prevProps.sunshineHoursMin ||\n      this.props.sunshineHoursMax !== prevProps.sunshineHoursMax\n    ) {\n      this.state.map.setFilter('cities_highlighted', this.getFilter())\n    }\n  }\n\n  render() {\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n\n    return <div style={style} ref={el => (this.mapContainer = el)} />\n  }\n}\n\nexport default Map\n","const styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: 'teal'\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 320\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    minWidth: 0 // So the Typography noWrap works\n  },\n  range: {\n    margin: 20,\n    top: 100,\n    position: 'relative'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n})\n\nexport default styles\n","import AppBar from '@material-ui/core/AppBar'\nimport Drawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { Range } from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport React, { Component } from 'react'\n\nimport Map from './Map'\nimport styles from './App.styles'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      populationMin: 50000,\n      populationMax: 250000,\n      sunshineHoursMin: 1600,\n      sunshineHoursMax: 2000\n    }\n  }\n\n  onSliderChange = (type, value) => {\n    this.setState({\n      [`${type}Min`]: value[0],\n      [`${type}Max`]: value[1]\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const populationMinLabel = this.state.populationMin.toLocaleString()\n    const maxThreshold = 500000\n    const populationMaxLabel =\n      this.state.populationMax > 500000\n        ? maxThreshold.toLocaleString() + ' +'\n        : this.state.populationMax.toLocaleString()\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              WoWohnen\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" classes={{ paper: classes.drawerPaper }}>\n          <div className={classes.range}>\n            <Typography\n              variant=\"body1\"\n              color=\"inherit\"\n              className={classes.label}\n            >\n              <span role=\"img\" aria-label=\"rural\">\n                üë©‚Äçüåæ\n              </span>{' '}\n              {populationMinLabel} - {populationMaxLabel}{' '}\n              <span role=\"img\" aria-label=\"urban\">\n                üë©‚Äç‚öïÔ∏èüë©‚Äçüíªüë®‚Äçüé®ü§µüë©‚ÄçüöÄ\n              </span>\n            </Typography>\n            <Range\n              defaultValue={[\n                this.state.populationMin,\n                this.state.populationMax\n              ]}\n              min={0}\n              max={501000}\n              step={1000}\n              onChange={value => this.onSliderChange('population', value)}\n              trackStyle={[{ backgroundColor: 'teal' }]}\n              handleStyle={[{ borderColor: 'teal' }, { borderColor: 'teal' }]}\n            />\n          </div>\n          <div className={classes.range}>\n            <Typography\n              variant=\"body1\"\n              color=\"inherit\"\n              className={classes.label}\n            >\n              <span role=\"img\" aria-label=\"cloudy\">\n                üå•\n              </span>{' '}\n              {this.state.sunshineHoursMin.toLocaleString()} -{' '}\n              {this.state.sunshineHoursMax.toLocaleString()}{' '}\n              <span role=\"img\" aria-label=\"sunny\">\n                ‚òÄÔ∏è\n              </span>\n            </Typography>\n            <Range\n              defaultValue={[\n                this.state.sunshineHoursMin,\n                this.state.sunshineHoursMax\n              ]}\n              min={0}\n              max={2000}\n              step={100}\n              onChange={value => this.onSliderChange('sunshineHours', value)}\n              trackStyle={[{ backgroundColor: 'teal' }]}\n              handleStyle={[{ borderColor: 'teal' }, { borderColor: 'teal' }]}\n            />\n          </div>\n        </Drawer>\n        <main className={classes.content}>\n          <Map\n            populationMin={this.state.populationMin}\n            populationMax={this.state.populationMax}\n            sunshineHoursMin={this.state.sunshineHoursMin}\n            sunshineHoursMax={this.state.sunshineHoursMax}\n          />\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}